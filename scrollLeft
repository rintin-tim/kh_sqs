
var wrapper = document.getElementsByClassName("sqs-gallery-design-strip")[0];

/** store the leftScroll position */
var scrollPosition = 0

/** set tolerance */
var tolerance = 100;

/** listen for any scroll even and run function. */
//wrapper.addEventListener('scroll', function() { scrollLog(wrapper); });
//wrapper.addEventListener('scroll', scrollLog);
wrapper.onscroll = function() { scrollLog(wrapper); };

/** keep track of the current scrollLeft position and compare it to the stored scrollPosition value. 
if the current position is within 100 (tolerance) of previous value, everything is OK - update scrollPosition 
If it is greater "something happened". Do not update and revert element's scrollLeft to last known. 
If the difference is greater it is probably because the scroll has jumped to the beginning.
 */
function scrollLog(wrapper) {
	console.log('start scrollLog function')
	element = wrapper;
	console.log('current scrollPosition is: ' + scrollPosition)
	console.log('current scrollLeft is: ' + element.scrollLeft)
	var stored = scrollPosition
	var current = element.scrollLeft
	
	// if there's a large jump, restore the previous scrollPosition, otherwise update the scroll position
	if (((stored  - current) > tolerance) && (current < tolerance) ) {
		console.log('large jump. resetting scrollLeft to: ' + scrollPosition)
		element.scrollLeft = scrollPosition;
	} else {
		console.log('within tolerance. scrollPosition updated to: ' + current)
		scrollPosition = current;
	}

}





/// Portrait listener click 

// attempts to reset the left position
wrapper = document.getElementsByClassName("sqs-wrapper")[0];
var tim = document.getElementsByClassName("sqs-gallery-design-strip-slide")[19]  // "last" image
//tim.addEventListener('click', function() {wrapper.style.left = "0px"})

tim.addEventListener('click', function(ev) {
	ev.stopPropagation();
	console.log('wrapper: ' + wrapper.style.left);
	setTimeout(function() {
		wrapper.style.left = "0px",
		console.log('new wrapper: ' + wrapper.style.left);
	}, 250)}, false)


// debugger - prints the element within the wrapper receiving the click
wrapper = document.getElementsByClassName("sqs-wrapper")[0];
wrapper.addEventListener('click', function(e) {console.log(e.target)})


tim.addEventListener('click', function(ev) {
	ev.stopPropagation();
	console.log('wrapper: ' + wrapper.style.left);
	setTimeout(function() {
		wrapper.style.left = "0px",
		console.log('new wrapper: ' + wrapper.style.left);
	}, 250)}, false)


$('[onclick]').each(function() {
    var handler = $(this).prop('onclick');
    $(this).removeProp('onclick');
    $(this).click(handler);
});
